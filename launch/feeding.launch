<launch>
  <!-- Base Args -->
  <arg name="sim" default="false" doc="Whether to run in Aikido-sim only" />
  <arg name="version" default="2" doc="Kinova Arm Version (JACO = 2, Kortex = 3)" />
  <arg name="use_forque" value="true" />
  <arg name="use_apriltag_calib" value="false" />

  <!-- Feeding Args -->
  <arg name="autoRestart" default="false" doc="Whether to restart behavior tree at end without command line input." />
  <arg name="treeFile" default="feeding.xml" doc="BT root XML, from package://ada_feeding/trees" />

  <!-- Libada Config -->
  <include file="$(find libada)/launch/libada.launch" pass_all_args="true" />
  <!-- Libada Overrides -->
  <rosparam file="$(find ada_feeding)/config/gen$(arg version)_ada_config.yaml" command="load" ns="adaConf" />

  <!-- Additional feeding-specific controllers -->
  <group unless="$(arg sim)" >
    <rosparam file="$(find ada_feeding)/config/gen$(arg version)_feeding_controllers.yaml" command="load" />
    <node name="forque_controller_spawner_stopped" pkg="controller_manager" type="spawner" respawn="false"
            output="screen"
            args="
               --stopped
               move_until_touch_topic_controller
               " />
  </group>

  <!-- Launch Feeding Binary -->
  <node name="feeding"
          pkg="ada_feeding"
          type="feeding"
          output="screen"
          required="true">
    <remap from="~watchdog" to="/watchdog" />
    <remap from="~food_detector" to="/food_detector/marker_array" />
    <remap from="~face_detector" to="/face_detector/marker_array" />
    <remap from="~food_request" to="/alexa_msgs" />
    <param name="sim" value="$(arg sim)" />
    <param name="autoRestart" value="$(arg autoRestart)" />
    <param name="treeFile" value="$(find ada_feeding)/trees/$(arg treeFile)" />
    <rosparam file="$(find ada_feeding)/config/gen$(arg version)_feeding_config.yaml" command="load" />
  </node>

  <node name="relay_camera_info" pkg="topic_tools" type="relay" args="/camera/depth_registered/sw_registered/camera_info /camera/aligned_depth_to_color/camera_info" /> 

  <node name="relay_depth_info" pkg="topic_tools" type="relay" args="/camera/depth_registered/sw_registered/image_rect_raw /camera/aligned_depth_to_color/image_raw" /> 

</launch>